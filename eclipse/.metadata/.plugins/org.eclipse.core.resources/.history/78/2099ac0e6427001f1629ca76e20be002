/*     */ package LehanClient;
/*     */ 
/*     */ import com.google.gson.Gson;
/*     */ import java.io.BufferedReader;
/*     */ import java.io.File;
/*     */ import java.io.FileInputStream;
/*     */ import java.io.FileOutputStream;
/*     */ import java.io.IOException;
/*     */ import java.io.InputStreamReader;
/*     */ import java.lang.reflect.Type;
/*     */ 
/*     */ public class FileManager
/*     */ {
/*  14 */   private static Gson gson = new Gson();
/*  15 */   private static File ROOT_DIR = new File("Lehan Client");
/*  16 */   public static File MODS_DIR = new File(ROOT_DIR, "Mods");
/*     */   
/*     */   public static void init() {
/*  19 */     if (!ROOT_DIR.exists()) {
/*  20 */       ROOT_DIR.mkdirs();
/*     */     }
/*  22 */     if (!MODS_DIR.exists()) {
/*  23 */       MODS_DIR.mkdirs();
/*     */     }
/*     */   }
/*     */ 
/*     */   
/*     */   public static Gson getGson() {
/*  29 */     return gson;
/*     */   }
/*     */   
/*     */   public static File getRootDirectory() {
/*  33 */     return ROOT_DIR;
/*     */   }
/*     */   
/*     */   public static File getModsDirectory() {
/*  37 */     return MODS_DIR;
/*     */   }
/*     */   
/*     */   public static boolean writeJsonToFile(File file, Object obj) {
/*     */     try {
/*  42 */       if (!file.exists()) {
/*  43 */         file.createNewFile();
/*     */       }
/*  45 */       FileOutputStream outputStream = new FileOutputStream(file);
/*  46 */       outputStream.write(gson.toJson(obj).getBytes());
/*  47 */       outputStream.flush();
/*  48 */       outputStream.close();
/*  49 */       return true;
/*  50 */     } catch (IOException e) {
/*  51 */       e.printStackTrace();
/*  52 */       return false;
/*     */     } 
/*     */   }
/*     */   
/*     */   public static <T> T readFromJson(File file, Class<T> c) {
/*     */     try {
/*  58 */       FileInputStream inputStream = new FileInputStream(file);
/*  59 */       InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
/*  60 */       BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
/*     */       
/*  62 */       StringBuilder builder = new StringBuilder();
/*     */       
/*     */       String line;
/*  65 */       while ((line = bufferedReader.readLine()) != null) {
/*  66 */         builder.append(line);
/*     */       }
/*     */       
/*  69 */       bufferedReader.close();
/*  70 */       inputStreamReader.close();
/*  71 */       inputStream.close();
/*     */       
/*  73 */       return (T)gson.fromJson(builder.toString(), c);
/*     */     }
/*  75 */     catch (IOException e) {
/*  76 */       e.printStackTrace();
/*  77 */       return null;
/*     */     } 
/*     */   }
/*     */   public static <T> T readFromJson(File file, Type type) {
/*     */     try {
/*  82 */       FileInputStream inputStream = new FileInputStream(file);
/*  83 */       InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
/*  84 */       BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
/*     */       
/*  86 */       StringBuilder builder = new StringBuilder();
/*     */       
/*     */       String line;
/*  89 */       while ((line = bufferedReader.readLine()) != null) {
/*  90 */         builder.append(line);
/*     */       }
/*     */       
/*  93 */       bufferedReader.close();
/*  94 */       inputStreamReader.close();
/*  95 */       inputStream.close();
/*     */       
/*  97 */       return (T)gson.fromJson(builder.toString(), type);
/*     */     }
/*  99 */     catch (IOException e) {
/* 100 */       e.printStackTrace();
/* 101 */       return null;
/*     */     } 
/*     */   }
/*     */ }


/* Location:              C:\Users\Mathew\Documents\LehanClient.jar!\LehanClient\FileManager.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */